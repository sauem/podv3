<?php


namespace backend\controllers;


use backend\models\CategoriesModel;
use backend\models\ContactsModel;
use backend\models\ProductsModel;
use common\helper\Helper;
use yii\helpers\ArrayHelper;
use yii\web\Response;

class AjaxController extends BaseController
{
    public function init()
    {
        \Yii::$app->response->format = Response::FORMAT_JSON;
        parent::init(); // TODO: Change the autogenerated stub
    }

    function actionLoadProductSelect()
    {
        $ids = \Yii::$app->request->post('keys');
        $contacts = ContactsModel::find()
            ->with('page')
            ->where(['IN', 'contacts.id', $ids])->asArray()->all();
        $total = 0;
        $subTotal = 0;
        $sale = 0;

        $sale = array_sum(ArrayHelper::getColumn($contacts, 'page.product.sale_price'));
        $subTotal = array_sum(ArrayHelper::getColumn($contacts, 'page.product.regular_price'));
        $total = $subTotal - $sale;
        $product = ArrayHelper::getColumn($contacts, 'page.product');
        $customer = $contacts[0];
        return [
            'customer' => $customer,
            'product' => $product,
            'saleTotal' => $sale,
            'subTotal' => $subTotal,
            'total' => $total
        ];
    }

    function actionLoadSku()
    {
        $keys = \Yii::$app->request->post('keys');
        $sku = ProductsModel::findAll(['category_id' => $keys]);
        return $sku;
    }

    function actionLoadProduct()
    {
        $sku = \Yii::$app->request->post('sku');

        $product = ProductsModel::find()
            ->where(['sku' => $sku])
            ->with('category')
            ->asArray()->one();
        $product['option'] = Helper::option($product['option']);
        return $product;
    }

    function actionUpdateTotal()
    {
        $sku = \Yii::$app->request->post('sku');
        $qty = \Yii::$app->request->post('qty');
        $qty = $qty ? $qty : 1;
        $p = ProductsModel::findOne(['sku' => $sku]);
        $subTotal = $p->regular_price * $qty;
        $saleTotal = $p->sale_price * $qty;
        $total =  $subTotal - $saleTotal;
        return [
            'subTotal' => $subTotal,
            'saleTotal' => $saleTotal,
            'total' => $total,
            'qty' => $qty
        ];

    }

}