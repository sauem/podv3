<?php


namespace backend\controllers;


use backend\models\Warehouse;
use backend\models\WarehouseStorage;
use backend\models\WarehouseTransaction;
use yii\db\Transaction;
use yii\web\BadRequestHttpException;
use yii\web\Response;

class AjaxWarehouseController extends BaseController
{
    public function init()
    {
        \Yii::$app->response->format = Response::FORMAT_JSON;

        parent::init(); // TODO: Change the autogenerated stub
    }

    /**
     * @throws BadRequestHttpException
     */
    public function actionSaveTransactionStorage()
    {
        $warehouseId = \Yii::$app->request->post('warehouse_id');
        $productSku = \Yii::$app->request->post('product_sku');
        $quantity = \Yii::$app->request->post('quantity');
        $transType = \Yii::$app->request->post('trans_type');
        $note = \Yii::$app->request->post('note');

        $transaction = \Yii::$app->getDb()->beginTransaction(Transaction::SERIALIZABLE);
        try {

            $warehouseStorage = WarehouseStorage::findOne(['warehouse_id' => $warehouseId, 'product_sku' => $productSku]);
            if (!$warehouseStorage) {
                throw new BadRequestHttpException('Không tìm thấy kho/sản phẩm này!');
            }
            WarehouseStorage::doUpdateWarehouseTransaction($warehouseId, $productSku, $quantity, $transType, $note);
            $transaction->commit();
        } catch (\Exception $e) {
            $transaction->rollBack();
            throw new BadRequestHttpException($e->getMessage());
        }
        return $warehouseStorage;
    }
}