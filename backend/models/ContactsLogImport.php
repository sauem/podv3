<?php

namespace backend\models;

use Yii;
use yii\db\ActiveRecord;

/**
 * This is the model class for table "contacts_log_import".
 *
 * @property int $id
 * @property int $phone
 * @property int $code
 * @property string|null $address
 * @property string|null $zipcode
 * @property string|null $category
 * @property string|null $option
 * @property string|null $customer_note
 * @property string $status
 * @property string|null $note
 * @property int $created_at
 * @property int $updated_at
 */
class ContactsLogImport extends ActiveRecord
{
    /**
     * {@inheritdoc}
     */
    public static function tableName()
    {
        return 'contacts_log_import';
    }

    /**
     * {@inheritdoc}
     */
    public function rules()
    {
        return [
            [['phone', 'code', 'status'], 'required'],
            [['phone', 'created_at', 'updated_at'], 'integer'],
            [['status'], 'string', 'max' => 50],
            [['zipcode', 'category', 'option', 'customer_note', 'note', 'code', 'address'], 'string', 'max' => 255],
        ];
    }

    /**
     * {@inheritdoc}
     */
    public function beforeSave($insert)
    {
        if ($insert) {
            if (!$this->created_at) {
                $this->created_at = time();
            }
            $limit = self::find()->where(['code' => $this->code])->count();
            if ($limit >= 5) {
                $this->addError("code", "Liên hệ quá số lần liên lạc!");
                return false;
            }
        }
        $this->updated_at = time();
        return parent::beforeSave($insert); // TODO: Change the autogenerated stub
    }

    public function attributeLabels()
    {
        return [
            'id' => 'ID',
            'phone' => 'Phone',
            'code' => 'Code',
            'address' => 'Address',
            'zipcode' => 'Zipcode',
            'category' => 'Category',
            'option' => 'Option',
            'customer_note' => 'Customer Note',
            'status' => 'Status',
            'note' => 'Note',
            'created_at' => 'Created At',
            'updated_at' => 'Updated At',
        ];
    }

    public function getContact()
    {
        return $this->hasOne(ContactsModel::className(), ['phone' => 'phone']);
    }

    public function getLog()
    {
        return $this->hasOne(ContactsLog::className(), ['phone' => 'phone', 'contact_code' => 'code']);
    }
}
